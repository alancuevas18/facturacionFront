{"remainingRequest":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/babel-loader/lib/index.js!/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alancuevas/Documents/Projects/EmacFacturacion/src/components/Wizard/Wizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/src/components/Wizard/Wizard.vue","mtime":1670228071000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/babel.config.js","mtime":1670228070000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/babel-loader/lib/index.js","mtime":1676518230575},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js","mtime":1676518230651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;AAiGA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;IACAG;MACAJ;MACAC;IACA;IACAI;MACAL;MACAC;IACA;IACAK;MACAN;MACAC;IACA;IACAM;MACAP;IACA;EACA;EACAQ;IACAC;MACAC;MACAZ;MACAa;QAAA;QACA;QACA;UACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAC;MACA;MACA;QACAA;MACA;MACA;QAAAA;MAAA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;QACAC,aACA,uBACA;MACA;QACAA;MACA;MACA;IACA;EACA;EACAC;IACAf;MACA;MACA;MACAgB;MACA;QACAA;QACAA;MACA;MACA;QACAA;QACAA;MACA;MACA;IACA;IACAf;MACA;MACA;MACA;QACAE;MACA;IACA;IACAc;MAAA;MACA;MACA;MACA;QACA,uCACAC;UACA;UACA;QACA,GACAC;UACA;QACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA;YAAA;cAAAC;cACA;gBACA;cACA;cAAA,iCACAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA,KACA;gBAAA;gBAAA;cAAA;cAAA,MAEAC;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACA;YAAA;cAAAC;cACA;gBACA;cACA;cAAA;cAAA;YAAA;cAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAGA;IACAC;MACA;MACA;QACA;UAAAC;UAAAC;QACA;QACA;MACA;IACA;EACA;EACAC;IAAA;IACA;IACA;MACA;MACA;MACA;IACA;IACAC,wBACA,UACA;MACAC;IACA,GACA,MACA;EACA;EACAC;IACA5B;MACA;QACA;QACA;QACA6B;QACAC;QAEA;UACAA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["name","props","startIndex","type","default","title","subTitle","prevButtonText","nextButtonText","finishButtonText","vertical","components","TabItemContent","functional","render","provide","addTab","removeTab","data","tabs","activeTabIndex","tabLinkWidth","tabLinkHeight","computed","tabCount","linkWidth","width","activeTab","stepPercentage","progress","percentage","methods","tab","validate","then","catch","nextTab","isValid","prevTab","navigateToTab","index","valid","onResize","clientWidth","clientHeight","mounted","window","throttle","watch","oldTab","newTab"],"sourceRoot":"src/components/Wizard","sources":["Wizard.vue"],"sourcesContent":["<template>\n  <div class=\"wizard-container\">\n    <div class=\"card card-wizard active\" id=\"wizardProfile\">\n      <form @submit.prevent>\n        <!--\n          You can switch \" data-color=\"primary\" \"  with one of the next bright colors: \"green\", \"orange\", \"red\", \"blue\"\n        -->\n        <div class=\"card-header text-center\">\n          <slot name=\"header\">\n            <h3 v-if=\"title\" class=\"card-title\">{{ title }}</h3>\n            <h5 v-if=\"subTitle\" class=\"description\">{{ subTitle }}</h5>\n          </slot>\n\n          <div class=\"wizard-navigation\">\n            <div class=\"progress-with-circle\">\n              <div\n                class=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuenow=\"1\"\n                aria-valuemin=\"1\"\n                aria-valuemax=\"3\"\n                :style=\"{ width: `${progress}%` }\"\n              ></div>\n            </div>\n            <ul class=\"nav nav-pills\">\n              <li\n                v-for=\"(tab, index) in tabs\"\n                :key=\"tab.title\"\n                role=\"tab\"\n                :tabindex=\"tab.checked ? 0 : ''\"\n                :id=\"`step-${tab.tabId}`\"\n                :aria-controls=\"tab.tabId\"\n                :aria-disabled=\"!tab.active\"\n                :aria-selected=\"tab.active\"\n                :ref=\"`tab-${index}`\"\n                class=\"nav-item wizard-tab-link\"\n                :style=\"linkWidth\"\n              >\n                <a\n                  class=\"nav-link\"\n                  @click=\"navigateToTab(index)\"\n                  :class=\"[\n                    { 'disabled-wizard-link': !tab.checked },\n                    { active: tab.active },\n                    { checked: tab.checked }\n                  ]\"\n                  data-toggle=\"tab\"\n                >\n                  <tab-item-content :tab=\"tab\"></tab-item-content>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"card-body\">\n          <div class=\"tab-content\">\n            <slot :activeIndex=\"activeTabIndex\" :activeTab=\"activeTab\"> </slot>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <slot name=\"footer\" :next-tab=\"nextTab\" :prev-tab=\"prevTab\">\n            <div class=\"pull-right\">\n              <base-button\n                v-if=\"activeTabIndex < tabCount - 1\"\n                type=\"primary\"\n                wide\n                @click.native=\"nextTab\"\n                class=\"btn-next\"\n              >\n                {{ nextButtonText }}\n              </base-button>\n              <base-button v-else wide @click.native=\"nextTab\">{{\n                finishButtonText\n              }}</base-button>\n            </div>\n\n            <div class=\"pull-left\">\n              <base-button\n                v-if=\"activeTabIndex > 0\"\n                wide\n                type=\"primary\"\n                @click.native=\"prevTab\"\n                class=\"btn-previous\"\n              >\n                {{ prevButtonText }}\n              </base-button>\n            </div>\n            <div class=\"clearfix\"></div>\n          </slot>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { throttle } from './throttle';\n\nexport default {\n  name: 'simple-wizard',\n  props: {\n    startIndex: {\n      type: Number,\n      default: 0\n    },\n    title: {\n      type: String,\n      default: 'Title'\n    },\n    subTitle: {\n      type: String,\n      default: 'Subtitle'\n    },\n    prevButtonText: {\n      type: String,\n      default: 'Previous'\n    },\n    nextButtonText: {\n      type: String,\n      default: 'Next'\n    },\n    finishButtonText: {\n      type: String,\n      default: 'Finish'\n    },\n    vertical: {\n      type: Boolean\n    }\n  },\n  components: {\n    TabItemContent: {\n      functional: true,\n      props: ['tab'],\n      render(h, {props}) {\n        let content = props.tab.$slots.label;\n        if(content && content.length){\n          return content;\n        }\n        return h('span', [props.tab.$slots.label, props.tab.label])\n      }\n    }\n  },\n  provide() {\n    return {\n      addTab: this.addTab,\n      removeTab: this.removeTab\n    };\n  },\n  data() {\n    return {\n      tabs: [],\n      activeTabIndex: 0,\n      tabLinkWidth: 0,\n      tabLinkHeight: 50\n    };\n  },\n  computed: {\n    tabCount() {\n      return this.tabs.length;\n    },\n    linkWidth() {\n      let width = 100;\n      if (this.tabCount > 0) {\n        width = 100 / this.tabCount;\n      }\n      if (this.vertical) {\n        width = 100;\n      }\n      return { width: `${width}%` };\n    },\n    activeTab() {\n      return this.tabs[this.activeTabIndex];\n    },\n    stepPercentage() {\n      return (1 / (this.tabCount * 2)) * 100;\n    },\n    progress() {\n      let percentage = 0;\n      if (this.activeTabIndex > 0) {\n        let stepsToAdd = 1;\n        let stepMultiplier = 2;\n        percentage =\n          this.stepPercentage *\n          (this.activeTabIndex * stepMultiplier + stepsToAdd);\n      } else {\n        percentage = this.stepPercentage;\n      }\n      return percentage;\n    }\n  },\n  methods: {\n    addTab(tab) {\n      const index = this.$slots.default.indexOf(tab.$vnode);\n      let tabTitle = tab.title || '';\n      tab.tabId = `${tabTitle.replace(/ /g, '')}${index}`;\n      if (!this.activeTab && index === 0) {\n        tab.active = true;\n        tab.checked = true;\n      }\n      if (this.activeTab === tab.name) {\n        tab.active = true;\n        tab.checked = true;\n      }\n      this.tabs.splice(index, 0, tab);\n    },\n    removeTab(tab) {\n      const tabs = this.tabs;\n      const index = tabs.indexOf(tab);\n      if (index > -1) {\n        tabs.splice(index, 1);\n      }\n    },\n    validate(tab) {\n      let tabToValidate = tab || this.activeTab;\n      let beforeChange = tabToValidate.beforeChange;\n      if (beforeChange) {\n        return Promise.resolve(beforeChange())\n          .then(res => {\n            this.activeTab.hasError = res ? false : true;\n            return res;\n          })\n          .catch(() => {\n            this.activeTab.hasError = true;\n          });\n      } else {\n        return Promise.resolve(true);\n      }\n    },\n    async nextTab() {\n      let isValid = await this.validate();\n      if (isValid && this.activeTabIndex < this.tabCount - 1) {\n        this.activeTabIndex++;\n      }\n      return isValid;\n    },\n    prevTab() {\n      this.activeTabIndex--;\n    },\n    async navigateToTab(index) {\n      if (this.tabs[index].checked) {\n        // recursively validate each tab\n        if (index > this.activeTabIndex) {\n          let valid = await this.nextTab();\n          if (valid) {\n            this.navigateToTab(index);\n          }\n        } else {\n          this.activeTabIndex = index;\n        }\n      }\n    },\n    onResize() {\n      let tabLinks = document.getElementsByClassName('wizard-tab-link');\n      if (tabLinks.length > 0 && this.tabCount > 0) {\n        let { clientWidth, clientHeight } = tabLinks[0];\n        this.tabLinkWidth = clientWidth;\n        this.tabLinkHeight = clientHeight;\n      }\n    }\n  },\n  mounted() {\n    this.activeTabIndex = this.startIndex;\n    this.$nextTick(() => {\n      this.tabs[this.activeTabIndex].active = true;\n      this.tabs[this.activeTabIndex].checked = true;\n      this.onResize();\n    });\n    window.addEventListener(\n      'resize',\n      () => {\n        throttle(this.onResize, 40);\n      },\n      false\n    );\n  },\n  watch: {\n    activeTabIndex(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        let oldTab = this.tabs[oldValue];\n        let newTab = this.tabs[newValue];\n        oldTab.active = false;\n        newTab.active = true;\n\n        if (!newTab.checked) {\n          newTab.checked = true;\n        }\n        this.$emit('tab-change', oldTab, newTab);\n        this.$emit('update:startIndex', newValue);\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n/* Tab content animation */\n.tab-content {\n  display: flex; // to avoid horizontal scroll when animating\n  .tab-pane {\n    display: block;\n    animation: fadeIn 0.5s;\n    width: 100%;\n  }\n}\n\n/**\n      Extra niceties. Display error tabs and disable navigation unvisited tabs\n     */\n.wizard-navigation .nav-link {\n  &.active,\n  &.checked {\n    cursor: pointer;\n  }\n}\n\n.disabled-wizard-link {\n  cursor: not-allowed;\n}\n</style>\n"]}]}