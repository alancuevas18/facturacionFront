{"remainingRequest":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/babel-loader/lib/index.js!/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alancuevas/Documents/Projects/EmacFacturacion/src/pages/Dashboard/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/src/pages/Dashboard/Dashboard.vue","mtime":1670228071000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/babel.config.js","mtime":1670228070000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/babel-loader/lib/index.js","mtime":1676518230575},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js","mtime":1676518230651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,oBACA,qDACA,wDACA,sDACA;AACA;AACA;EACAA;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACA;AAEA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC,aACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;QACAC;MACA,EACA;MACAC;QACAC;QACAC;UACAC,2CACAC;YACAX;UAAA,GACA;UACAY;QACA;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAJ;QACAJ;UACAG;UACAF,WACA;YACAQ;YACArC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAQ;UACA;QAEA;QACAc;QACAC;MACA;MACAI;QACAN;QACAJ;UACAG;UACAF,WACA;YACAQ;YACArC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAQ;UACA;QAEA;QACAc,iBACA,yBACA,wBACA,qBACA;QACAC;MACA;MACAK;QACAP;QACAJ;UACAG;UACAF,WACA;YACAQ;YACArC;YACAC;YACAC;YACAC;YACAC;YACAe;UACA;QAEA;QACAc;QACAC;MACA;IACA;EACA;EACAM;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QAAAC;QAAApB;MAAA;QAAAoB;QAAApB;MAAA;QAAAoB;QAAApB;MAAA;IACA;EACA;EACAqB;IACAC;MACA;QACAjB,2CACAC;UACAX;QAAA,GACA;QACAY;MACA;MACA;MACA;MACA;IACA;EACA;EACAgB;IACA;IACA;MACA;MACA;IACA;IACA;EACA;EACAC;IACA;MACA;MACA;IACA;EACA;AACA","names":["fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","components","LineChart","BarChart","StatsCard","TaskList","CountryMapCard","UserTable","data","statsCards","title","subTitle","type","icon","footer","bigLineChart","activeIndex","chartData","datasets","bigChartDatasetOptions","labels","extraOptions","gradientColors","gradientStops","categories","purpleLineChart","label","greenLineChart","blueBarChart","computed","enableRTL","isRTL","bigLineChartCategories","name","methods","initBigChart","mounted","beforeDestroy"],"sourceRoot":"src/pages/Dashboard","sources":["Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <!-- Big Chart -->\n    <div class=\"col-12\">\n      <card type=\"chart\">\n        <template slot=\"header\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n              <h5 class=\"card-category\">Total shipments</h5>\n              <h2 class=\"card-title\">Performance</h2>\n            </div>\n            <div class=\"col-sm-6 d-flex d-sm-block\">\n              <div\n                class=\"btn-group btn-group-toggle\"\n                :class=\"isRTL ? 'float-left' : 'float-right'\"\n                data-toggle=\"buttons\"\n              >\n                <label\n                  v-for=\"(option, index) in bigLineChartCategories\"\n                  :key=\"option.name\"\n                  class=\"btn btn-sm btn-primary btn-simple\"\n                  :class=\"{ active: bigLineChart.activeIndex === index }\"\n                  :id=\"index\"\n                >\n                  <input\n                    type=\"radio\"\n                    @click=\"initBigChart(index)\"\n                    name=\"options\"\n                    autocomplete=\"off\"\n                    :checked=\"bigLineChart.activeIndex === index\"\n                  />\n                  <span class=\"d-none d-sm-block\">{{ option.name }}</span>\n                  <span class=\"d-block d-sm-none\">\n                    <i :class=\"option.icon\"></i>\n                  </span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </template>\n        <div class=\"chart-area\">\n          <line-chart\n            style=\"height: 100%\"\n            ref=\"bigChart\"\n            :chart-data=\"bigLineChart.chartData\"\n            :gradient-colors=\"bigLineChart.gradientColors\"\n            :gradient-stops=\"bigLineChart.gradientStops\"\n            :extra-options=\"bigLineChart.extraOptions\"\n          >\n          </line-chart>\n        </div>\n      </card>\n    </div>\n    <!-- Stats Cards -->\n    <div class=\"col-lg-3 col-md-6\" v-for=\"card in statsCards\" :key=\"card.title\">\n      <stats-card\n        :title=\"card.title\"\n        :sub-title=\"card.subTitle\"\n        :type=\"card.type\"\n        :icon=\"card.icon\"\n      >\n        <div slot=\"footer\" v-html=\"card.footer\"></div>\n      </stats-card>\n    </div>\n\n    <!-- Small charts -->\n    <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n      <card type=\"chart\">\n        <template slot=\"header\">\n          <h5 class=\"card-category\">Total Shipments</h5>\n          <h3 class=\"card-title\">\n            <i class=\"tim-icons icon-bell-55 text-primary \"></i> 763,215\n          </h3>\n        </template>\n        <div class=\"chart-area\">\n          <line-chart\n            style=\"height: 100%\"\n            :chart-data=\"purpleLineChart.chartData\"\n            :gradient-colors=\"purpleLineChart.gradientColors\"\n            :gradient-stops=\"purpleLineChart.gradientStops\"\n            :extra-options=\"purpleLineChart.extraOptions\"\n          >\n          </line-chart>\n        </div>\n      </card>\n    </div>\n    <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n      <card type=\"chart\">\n        <template slot=\"header\">\n          <h5 class=\"card-category\">Daily Sales</h5>\n          <h3 class=\"card-title\">\n            <i class=\"tim-icons icon-delivery-fast text-info \"></i> 3,500€\n          </h3>\n        </template>\n        <div class=\"chart-area\">\n          <bar-chart\n            style=\"height: 100%\"\n            :chart-data=\"blueBarChart.chartData\"\n            :gradient-stops=\"blueBarChart.gradientStops\"\n            :extra-options=\"blueBarChart.extraOptions\"\n          >\n          </bar-chart>\n        </div>\n      </card>\n    </div>\n    <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n      <card type=\"chart\">\n        <template slot=\"header\">\n          <h5 class=\"card-category\">Completed tasks</h5>\n          <h3 class=\"card-title\">\n            <i class=\"tim-icons icon-send text-success \"></i> 12,100K\n          </h3>\n        </template>\n        <div class=\"chart-area\">\n          <line-chart\n            style=\"height: 100%\"\n            :chart-data=\"greenLineChart.chartData\"\n            :gradient-stops=\"greenLineChart.gradientStops\"\n            :extra-options=\"greenLineChart.extraOptions\"\n          >\n          </line-chart>\n        </div>\n      </card>\n    </div>\n    <div class=\"col-lg-5\">\n      <card type=\"tasks\" :header-classes=\"{ 'text-right': isRTL }\">\n        <template slot=\"header\">\n          <h6 class=\"title d-inline\">Tasks (5)</h6>\n          <p class=\"card-category d-inline\">Today</p>\n          <base-dropdown\n            menu-on-right=\"\"\n            tag=\"div\"\n            title-classes=\"btn btn-link btn-icon\"\n            :class=\"{ 'float-left': isRTL }\"\n          >\n            <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\n            <a class=\"dropdown-item\" href=\"#pablo\"> Action </a>\n            <a class=\"dropdown-item\" href=\"#pablo\"> Another action </a>\n            <a class=\"dropdown-item\" href=\"#pablo\"> Something else </a>\n          </base-dropdown>\n        </template>\n        <div class=\"table-full-width table-responsive\">\n          <task-list></task-list>\n        </div>\n      </card>\n    </div>\n    <div class=\"col-lg-7\">\n      <card class=\"card\" :header-classes=\"{ 'text-right': isRTL }\">\n        <h5 slot=\"header\" class=\"card-title\">Management table</h5>\n        <div class=\"table-responsive\"><user-table></user-table></div>\n      </card>\n    </div>\n    <div class=\"col-lg-12\"><country-map-card></country-map-card></div>\n  </div>\n</template>\n<script>\nimport LineChart from '@/components/Charts/LineChart';\nimport BarChart from '@/components/Charts/BarChart';\nimport * as chartConfigs from '@/components/Charts/config';\nimport TaskList from './TaskList';\nimport UserTable from './UserTable';\nimport CountryMapCard from './CountryMapCard';\nimport StatsCard from 'src/components/Cards/StatsCard';\nimport config from '@/config';\n\nlet bigChartData = [\n  [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n  [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n  [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n]\nlet bigChartLabels = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\nlet bigChartDatasetOptions = {\n  fill: true,\n  borderColor: config.colors.primary,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0.0,\n  pointBackgroundColor: config.colors.primary,\n  pointBorderColor: 'rgba(255,255,255,0)',\n  pointHoverBackgroundColor: config.colors.primary,\n  pointBorderWidth: 20,\n  pointHoverRadius: 4,\n  pointHoverBorderWidth: 15,\n  pointRadius: 4,\n}\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    StatsCard,\n    TaskList,\n    CountryMapCard,\n    UserTable\n  },\n  data() {\n    return {\n      statsCards: [\n        {\n          title: '150GB',\n          subTitle: 'Number',\n          type: 'warning',\n          icon: 'tim-icons icon-chat-33',\n          footer: '<i class=\"tim-icons icon-refresh-01\"></i> Update Now'\n        },\n        {\n          title: '+45K',\n          subTitle: 'Followers',\n          type: 'primary',\n          icon: 'tim-icons icon-shape-star',\n          footer: '<i class=\"tim-icons icon-sound-wave\"></i></i> Last Research'\n        },\n        {\n          title: '150,000',\n          subTitle: 'Users',\n          type: 'info',\n          icon: 'tim-icons icon-single-02',\n          footer: '<i class=\"tim-icons icon-trophy\"></i> Customer feedback'\n        },\n        {\n          title: '23',\n          subTitle: 'Errors',\n          type: 'danger',\n          icon: 'tim-icons icon-molecule-40',\n          footer: '<i class=\"tim-icons icon-watch-time\"></i> In the last hours'\n        }\n      ],\n      bigLineChart: {\n        activeIndex: 0,\n        chartData: {\n          datasets: [{\n            ...bigChartDatasetOptions,\n            data: bigChartData[0]\n          }],\n          labels: bigChartLabels\n        },\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: []\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n          datasets: [\n            {\n              label: 'Data',\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80]\n            }\n          ]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0]\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n          datasets: [\n            {\n              label: 'My First dataset',\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80]\n            }\n          ]\n        },\n        gradientColors: [\n          'rgba(66,134,121,0.15)',\n          'rgba(66,134,121,0.0)',\n          'rgba(66,134,121,0)'\n        ],\n        gradientStops: [1, 0.4, 0]\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n          datasets: [\n            {\n              label: 'Countries',\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45]\n            }\n          ]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0]\n      }\n    };\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return [{ name: 'Accounts', icon: 'tim-icons icon-single-02' }, { name: 'Purchases', icon: 'tim-icons icon-gift-2' }, { name: 'Sessions', icon: 'tim-icons icon-tap-02' }];\n    }\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [{\n          ...bigChartDatasetOptions,\n          data: bigChartData[index]\n        }],\n        labels: bigChartLabels\n      };\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    }\n  },\n  mounted() {\n    this.i18n = this.$i18n;\n    if (this.enableRTL) {\n      this.i18n.locale = 'ar';\n      this.$rtl.enableRTL();\n    }\n    this.initBigChart(0);\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = 'en';\n      this.$rtl.disableRTL();\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}