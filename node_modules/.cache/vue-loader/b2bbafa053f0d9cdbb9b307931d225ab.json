{"remainingRequest":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alancuevas/Documents/Projects/EmacFacturacion/src/components/Modal.vue?vue&type=style&index=0&id=701ac82d&lang=css&","dependencies":[{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/src/components/Modal.vue","mtime":1670228071000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/css-loader/dist/cjs.js","mtime":1676518230438},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1676518230866},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/postcss-loader/src/index.js","mtime":1676518230571},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js","mtime":1676518230651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tb2RhbC5zaG93IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7Cn0K"},{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";AAsKA;AACA;AACA","file":"Modal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <SlideYUpTransition :duration=\"animationDuration\">\n    <div\n      ref=\"modal\"\n      class=\"modal fade\"\n      @click.self=\"closeModal\"\n      :class=\"[\n        { 'show d-block': show },\n        { 'd-none': !show },\n        { 'modal-mini': type === 'mini' }\n      ]\"\n      v-show=\"show\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      :aria-hidden=\"!show\"\n    >\n      <div\n        class=\"modal-dialog\"\n        role=\"document\"\n        :class=\"[\n          { 'modal-notice': type === 'notice' },\n          { 'modal-dialog-centered': centered },\n          modalClasses\n        ]\"\n      >\n        <div\n          class=\"modal-content\"\n          :class=\"[\n            gradient ? `bg-gradient-${gradient}` : '',\n            modalContentClasses\n          ]\"\n        >\n          <div\n            class=\"modal-header\"\n            :class=\"[headerClasses]\"\n            v-if=\"$slots.header\"\n          >\n            <slot name=\"header\"></slot>\n            <slot name=\"close-button\">\n              <button\n                type=\"button\"\n                class=\"close\"\n                v-if=\"showClose\"\n                @click=\"closeModal\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <i class=\"tim-icons icon-simple-remove\"></i>\n              </button>\n            </slot>\n          </div>\n\n          <div v-if=\"$slots.default\" class=\"modal-body\" :class=\"bodyClasses\">\n            <slot></slot>\n          </div>\n\n          <div class=\"modal-footer\" :class=\"footerClasses\" v-if=\"$slots.footer\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </SlideYUpTransition>\n</template>\n<script>\nimport { SlideYUpTransition } from 'vue2-transitions';\n\nexport default {\n  name: 'modal',\n  components: {\n    SlideYUpTransition\n  },\n  props: {\n    show: Boolean,\n    showClose: {\n      type: Boolean,\n      default: true\n    },\n    centered: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: 'Whether modal should be appended to document body'\n    },\n    scrollToBottom: {\n      type: Boolean,\n      default: true,\n      description: \"Whether modal should scroll to it's bottom automatically\"\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        let acceptedValues = ['', 'notice', 'mini'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Modal type (notice|mini|\"\") '\n    },\n    modalClasses: {\n      type: [Object, String],\n      description: 'Modal dialog css classes'\n    },\n    modalContentClasses: {\n      type: [Object, String],\n      description: 'Modal dialog content css classes'\n    },\n    gradient: {\n      type: String,\n      description: 'Modal gradient type (danger, primary etc)'\n    },\n    headerClasses: {\n      type: [Object, String],\n      description: 'Modal Header css classes'\n    },\n    bodyClasses: {\n      type: [Object, String],\n      description: 'Modal Body css classes'\n    },\n    footerClasses: {\n      type: [Object, String],\n      description: 'Modal Footer css classes'\n    },\n    animationDuration: {\n      type: Number,\n      default: 500,\n      description: 'Modal transition duration'\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('update:show', false);\n      this.$emit('close');\n    },\n    scrollModalToBottom() {\n      if (!this.scrollToBottom) return;\n      let elm = this.$refs.modal;\n      elm.scrollTop = elm.scrollHeight - elm.clientHeight;\n    }\n  },\n  mounted() {\n    if (this.appendToBody) {\n      document.body.appendChild(this.$el);\n    }\n  },\n  destroyed() {\n    if (this.appendToBody && this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n  },\n  watch: {\n    show(val) {\n      let documentClasses = document.body.classList;\n      if (val) {\n        documentClasses.add('modal-open');\n        this.$nextTick(this.scrollModalToBottom);\n      } else {\n        documentClasses.remove('modal-open');\n      }\n    }\n  }\n};\n</script>\n<style>\n.modal.show {\n  background-color: rgba(0, 0, 0, 0.3);\n}\n</style>\n"]}]}