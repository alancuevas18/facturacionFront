{"remainingRequest":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alancuevas/Documents/Projects/EmacFacturacion/src/pages/Forms/ValidationForms/TypeValidationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/src/pages/Forms/ValidationForms/TypeValidationForm.vue","mtime":1670228071000},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/babel-loader/lib/index.js","mtime":1676518230575},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/cache-loader/dist/cjs.js","mtime":1676518230225},{"path":"/Users/alancuevas/Documents/Projects/EmacFacturacion/node_modules/vue-loader/lib/index.js","mtime":1676518230651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGV4dGVuZCB9IGZyb20gInZlZS12YWxpZGF0ZSI7CmltcG9ydCB7IHJlcXVpcmVkLCBudW1lcmljLCByZWdleCwgY29uZmlybWVkIH0gZnJvbSAidmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMiOwoKZXh0ZW5kKCJyZXF1aXJlZCIsIHJlcXVpcmVkKTsKZXh0ZW5kKCJudW1lcmljIiwgbnVtZXJpYyk7CmV4dGVuZCgicmVnZXgiLCByZWdleCk7CmV4dGVuZCgiY29uZmlybWVkIiwgY29uZmlybWVkKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVxdWlyZWQ6ICIiLAogICAgICBlbWFpbDogIiIsCiAgICAgIG51bWJlcjogIiIsCiAgICAgIHVybDogIiIsCiAgICAgIGVxdWFsOiAiIiwKICAgICAgZXF1YWxUbzogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXQoKSB7CiAgICAgIGFsZXJ0KCJGb3JtIGhhcyBiZWVuIHN1Ym1pdHRlZCEiKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["TypeValidationForm.vue"],"names":[],"mappings":";AA6IA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TypeValidationForm.vue","sourceRoot":"src/pages/Forms/ValidationForms","sourcesContent":["<template>\n  <ValidationObserver v-slot=\"{ handleSubmit }\">\n  <form class=\"form-horizontal\" @submit.prevent=\"handleSubmit(submit)\">\n    <card>\n      <h4 slot=\"header\" class=\"card-title\">Type Validation</h4>\n      <div>\n        <div class=\"row\">\n          <label class=\"col-sm-2 col-form-label\">Requred Text</label>\n          <div class=\"col-sm-7\">\n            <ValidationProvider\n              name=\"required\"\n              rules=\"required\"\n              v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              required\n              v-model=\"required\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n          <label class=\"col-sm-3 label-on-right\"\n            ><code>required=\"true\"</code></label\n          >\n        </div>\n\n        <div class=\"row\">\n          <label class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-7\">\n            <ValidationProvider\n              name=\"email\"\n              rules=\"required|email\"\n              v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              required\n              v-model=\"email\"\n              type=\"email\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n          <label class=\"col-sm-3 label-on-right\"\n            ><code>email=\"true\"</code></label\n          >\n        </div>\n\n        <div class=\"row\">\n          <label class=\"col-sm-2 col-form-label\">Number</label>\n          <div class=\"col-sm-7\">\n            <ValidationProvider\n              name=\"number\"\n              rules=\"required|numeric\"\n              v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              required\n              v-model=\"number\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n          <label class=\"col-sm-3 label-on-right\"\n            ><code>numeric=\"true\"</code></label\n          >\n        </div>\n\n        <div class=\"row\">\n          <label class=\"col-sm-2 col-form-label\">Url</label>\n          <div class=\"col-sm-7\">\n            <ValidationProvider\n              name=\"url\"\n              :rules=\"{\n                required: true,\n                regex: /(https?:\\/\\/(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9])(:?\\d*)\\/?([a-z_\\/0-9\\-#.]*)\\??([a-z_\\/0-9\\-#=&]*)/g\n              }\"\n              v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              v-model=\"url\"\n              type=\"text\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n          <label class=\"col-sm-3 label-on-right\"><code>url=\"true\"</code></label>\n        </div>\n\n        <div class=\"row\">\n          <label class=\"col-sm-2 col-form-label\">Url</label>\n          <div class=\"col-sm-3\">\n            <ValidationProvider\n            name=\"equal\"\n            rules=\"required|confirmed:confirmation\"\n            v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              v-model=\"equal\"\n              type=\"text\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n          <div class=\"col-sm-3\">\n            <ValidationProvider\n            name=\"equalTo\"\n            rules=\"required\"\n            vid=\"confirmation\"\n            v-slot=\"{ passed, failed, errors }\"\n            >\n            <base-input\n              v-model=\"equalTo\"\n              type=\"text\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\">\n            </base-input>\n           </ValidationProvider>\n          </div>\n\n          <label class=\"col-sm-4 label-on-right\"\n            ><code>confirmed=\"equalToSource\"</code></label\n          >\n        </div>\n      </div>\n      <div class=\"text-center\">\n        <base-button\n          native-type=\"submit\"\n          type=\"primary\"\n          >Validate inputs</base-button\n        >\n      </div>\n    </card>\n  </form>\n</ValidationObserver>\n</template>\n<script>\nimport { extend } from \"vee-validate\";\nimport { required, numeric, regex, confirmed } from \"vee-validate/dist/rules\";\n\nextend(\"required\", required);\nextend(\"numeric\", numeric);\nextend(\"regex\", regex);\nextend(\"confirmed\", confirmed);\n\nexport default {\n  data() {\n    return {\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      equal: \"\",\n      equalTo: \"\"\n    };\n  },\n  methods: {\n    submit() {\n      alert(\"Form has been submitted!\");\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}